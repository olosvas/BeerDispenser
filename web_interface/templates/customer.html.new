{% extends 'layout.html' %}

{% block title %}Order Beverage{% endblock %}

{% block head %}
<style>
    :root {
        --beer-amber: #FFA500;
        --beer-foam: #f5f5f5;
        --kofola-brown: #4B2D1A;
        --birel-color: #FFC857;
    }

    .beverage-type-option,
    .beverage-size-option {
        cursor: pointer;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 2px solid transparent;
    }
    
    .beverage-type-option:hover,
    .beverage-size-option:hover {
        transform: translateY(-5px);
    }
    
    .beverage-type-option.selected,
    .beverage-size-option.selected {
        border-color: var(--bs-primary);
        background-color: rgba(255, 255, 255, 0.1);
    }
    
    .progress-container {
        max-width: 600px;
        margin: 0 auto;
    }
    
    .order-steps .step {
        position: relative;
        padding-bottom: 30px;
    }
    
    .order-steps .step:not(:last-child):after {
        content: '';
        position: absolute;
        left: 12px;
        top: 30px;
        height: calc(100% - 30px);
        width: 2px;
        background-color: var(--bs-gray-600);
    }
    
    .order-steps .step.completed:not(:last-child):after {
        background-color: var(--bs-success);
    }
    
    .order-steps .step-icon {
        width: 26px;
        height: 26px;
        border-radius: 50%;
        background-color: var(--bs-gray-600);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
    }
    
    .order-steps .step.active .step-icon {
        background-color: var(--bs-primary);
    }
    
    .order-steps .step.completed .step-icon {
        background-color: var(--bs-success);
    }
    
    .age-verification {
        max-width: 500px;
        margin: 0 auto;
    }
    
    .beverage-ready-message {
        animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }
    
    #beverage-animation {
        max-width: 200px;
        margin: 20px auto;
    }
    
    .glass {
        position: relative;
        height: 250px;
        width: 80px;
        background-color: rgba(255, 255, 255, 0.1);
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-top: none;
        border-radius: 0 0 15px 15px;
        margin: 0 auto;
        overflow: hidden;
    }
    
    .liquid {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 0%;
        transition: height 1s ease-in-out;
    }
    
    .liquid.beer {
        background-color: var(--beer-amber);
    }
    
    .liquid.kofola {
        background-color: var(--kofola-brown);
    }
    
    .liquid.birel {
        background-color: var(--birel-color);
    }
    
    .foam {
        position: absolute;
        bottom: 100%;
        left: 0;
        width: 100%;
        height: 20px;
        background-color: var(--beer-foam);
        border-radius: 50% 50% 0 0;
        transition: bottom 1s ease-in-out;
    }
</style>
{% endblock %}

{% block content %}
<div class="container">
    <!-- Progress Steps -->
    <div class="progress-container mb-5 d-none" id="progress-container">
        <div class="order-steps">
            <div class="step active" id="step-selection">
                <div class="d-flex align-items-center">
                    <div class="step-icon">1</div>
                    <div>Selection</div>
                </div>
            </div>
            
            <div class="step" id="step-verification">
                <div class="d-flex align-items-center">
                    <div class="step-icon">2</div>
                    <div>Age Verification</div>
                </div>
            </div>
            
            <div class="step" id="step-dispensing">
                <div class="d-flex align-items-center">
                    <div class="step-icon">3</div>
                    <div>Dispensing</div>
                </div>
            </div>
            
            <div class="step" id="step-pickup">
                <div class="d-flex align-items-center">
                    <div class="step-icon">4</div>
                    <div>Ready for Pickup</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Step 1: Beverage Type Selection -->
    <div id="beverage-type-selection" class="card shadow-sm mb-4">
        <div class="card-header bg-dark">
            <h2 class="text-center mb-0"><i class="fas fa-glass-cheers me-2"></i> Choose Your Beverage</h2>
        </div>
        <div class="card-body">
            <div class="text-center mb-4">
                <p class="lead">Select your beverage:</p>
            </div>
            
            <div class="row justify-content-center g-4">
                <div class="col-md-4">
                    <div class="card beverage-type-option h-100" data-type="beer">
                        <div class="card-body text-center">
                            <i class="fas fa-beer fa-3x mb-3" style="color: #FFA500;"></i>
                            <h3>Beer</h3>
                            <p class="text-muted">Classic Czech lager</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <div class="card beverage-type-option h-100" data-type="kofola">
                        <div class="card-body text-center">
                            <i class="fas fa-glass-water fa-3x mb-3" style="color: #4B2D1A;"></i>
                            <h3>Kofola</h3>
                            <p class="text-muted">Traditional Czech cola</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <div class="card beverage-type-option h-100" data-type="birel">
                        <div class="card-body text-center">
                            <i class="fas fa-beer-mug-empty fa-3x mb-3" style="color: #FFC857;"></i>
                            <h3>Birel</h3>
                            <p class="text-muted">Non-alcoholic beer</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="text-center mt-4">
                <button id="continue-type-btn" class="btn btn-primary btn-lg" disabled>
                    <i class="fas fa-check-circle me-2"></i>Continue
                </button>
            </div>
        </div>
    </div>
    
    <!-- Step 2: Size Selection -->
    <div id="beverage-size-selection" class="card shadow-sm mb-4 d-none">
        <div class="card-header bg-dark">
            <h2 class="text-center mb-0"><i class="fas fa-ruler me-2"></i> Select Size</h2>
        </div>
        <div class="card-body">
            <div class="text-center mb-4">
                <p class="lead">Select your preferred size:</p>
                <p id="beverage-type-display" class="text-muted">Selected: <span></span></p>
            </div>
            
            <div class="row justify-content-center g-4">
                <div class="col-md-5">
                    <div class="card beverage-size-option h-100" data-size="300">
                        <div class="card-body text-center">
                            <i class="fas fa-glass-water fa-3x mb-3 text-warning"></i>
                            <h3>Small</h3>
                            <p class="mb-1">300ml</p>
                            <p class="text-muted">Perfect for a quick refreshment</p>
                        </div>
                    </div>
                </div>
                
                <div class="col-md-5">
                    <div class="card beverage-size-option h-100" data-size="500">
                        <div class="card-body text-center">
                            <i class="fas fa-glass-water fa-4x mb-3 text-warning"></i>
                            <h3>Large</h3>
                            <p class="mb-1">500ml</p>
                            <p class="text-muted">The ultimate thirst quencher</p>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="text-center mt-4">
                <button id="back-to-type-btn" class="btn btn-secondary btn-lg me-2">
                    <i class="fas fa-arrow-left me-2"></i>Back
                </button>
                <button id="continue-size-btn" class="btn btn-primary btn-lg" disabled>
                    <i class="fas fa-check-circle me-2"></i>Continue
                </button>
            </div>
        </div>
    </div>
    
    <!-- Step 3: Age Verification -->
    <div id="age-verification" class="card shadow-sm mb-4 d-none">
        <div class="card-header bg-dark">
            <h2 class="text-center mb-0"><i class="fas fa-id-card me-2"></i> Age Verification</h2>
        </div>
        <div class="card-body">
            <div class="age-verification">
                <div class="text-center mb-4">
                    <p class="lead">Please confirm you are of legal drinking age</p>
                    <p id="order-summary" class="text-muted">You've selected: <span></span></p>
                </div>
                
                <div id="verification-form" class="needs-validation">
                    <div class="mb-3">
                        <label for="id-number" class="form-label">ID Number</label>
                        <input type="text" class="form-control" id="id-number" placeholder="Enter your ID number" required>
                        <div class="invalid-feedback">Please provide a valid ID number.</div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="birth-date" class="form-label">Date of Birth</label>
                        <input type="date" class="form-control" id="birth-date" required>
                        <div class="invalid-feedback">Please provide your date of birth.</div>
                    </div>
                    
                    <div class="form-check mb-4">
                        <input class="form-check-input" type="checkbox" id="age-confirmation" required>
                        <label class="form-check-label" for="age-confirmation">
                            I confirm that I am of legal drinking age
                        </label>
                        <div class="invalid-feedback">You must confirm you are of legal drinking age.</div>
                    </div>
                    
                    <div class="text-center">
                        <button id="back-to-size-btn" class="btn btn-secondary btn-lg me-2">
                            <i class="fas fa-arrow-left me-2"></i>Back
                        </button>
                        <button id="verify-age-btn" class="btn btn-primary btn-lg">
                            <i class="fas fa-check-circle me-2"></i>Verify & Order
                        </button>
                    </div>
                </div>
                
                <div id="verification-processing" class="text-center d-none">
                    <div class="spinner-border text-primary mb-3" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p>Verifying your information...</p>
                </div>
                
                <div id="verification-error" class="alert alert-danger text-center d-none" role="alert">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <span id="verification-error-message">Error verifying age. Please try again.</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Step 4: Dispensing Animation -->
    <div id="dispensing" class="card shadow-sm mb-4 d-none">
        <div class="card-header bg-dark">
            <h2 class="text-center mb-0"><i class="fas fa-glass-cheers me-2"></i> Preparing Your Beverage</h2>
        </div>
        <div class="card-body text-center">
            <p class="lead mb-4">Please wait while we prepare your drink...</p>
            
            <div id="beverage-animation">
                <div class="glass">
                    <div id="liquid" class="liquid beer"></div>
                    <div id="foam" class="foam"></div>
                </div>
            </div>
            
            <div class="dispensing-status mt-4">
                <div class="mb-3" id="dispensing-step-cup">
                    <i class="fas fa-circle text-muted me-2"></i> Dispensing cup...
                </div>
                <div class="mb-3 text-muted" id="dispensing-step-pour">
                    <i class="fas fa-circle text-muted me-2"></i> Pouring beverage...
                </div>
                <div class="mb-3 text-muted" id="dispensing-step-deliver">
                    <i class="fas fa-circle text-muted me-2"></i> Delivering to pickup station...
                </div>
            </div>
            
            <div id="dispensing-error" class="alert alert-danger mt-4 d-none" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                <span id="dispensing-error-message">An error occurred. Please contact staff for assistance.</span>
            </div>
        </div>
    </div>
    
    <!-- Step 5: Ready for Pickup -->
    <div id="ready" class="card shadow-sm mb-4 d-none">
        <div class="card-header bg-success">
            <h2 class="text-center mb-0"><i class="fas fa-check-circle me-2"></i> Your Beverage is Ready!</h2>
        </div>
        <div class="card-body text-center">
            <h3 class="beverage-ready-message my-4">Please collect your beverage from the pickup station</h3>
            
            <div class="card mb-4 bg-light">
                <div class="card-body">
                    <h4 class="mb-3">Order Details</h4>
                    <div id="ready-order-details" class="text-start">
                        <p><strong>Beverage:</strong> <span id="ready-beverage-type"></span></p>
                        <p><strong>Size:</strong> <span id="ready-beverage-size"></span>ml</p>
                        <p><strong>Order ID:</strong> <span id="ready-order-id"></span></p>
                    </div>
                </div>
            </div>
            
            <p>Thank you for using our automated beverage dispenser!</p>
            
            <button id="new-order-btn" class="btn btn-primary btn-lg mt-3">
                <i class="fas fa-plus-circle me-2"></i>Place Another Order
            </button>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // State variables
    let selectedBeverageType = '';
    let selectedSize = '';
    let orderInProgress = false;
    
    // Elements - Selection
    const beverageTypeOptions = document.querySelectorAll('.beverage-type-option');
    const beverageSizeOptions = document.querySelectorAll('.beverage-size-option');
    const continueTypeBtn = document.getElementById('continue-type-btn');
    const continueSizeBtn = document.getElementById('continue-size-btn');
    const backToTypeBtn = document.getElementById('back-to-type-btn');
    const backToSizeBtn = document.getElementById('back-to-size-btn');
    const beverageTypeDisplay = document.getElementById('beverage-type-display').querySelector('span');
    
    // Elements - Sections
    const progressContainer = document.getElementById('progress-container');
    const beverageTypeSelection = document.getElementById('beverage-type-selection');
    const beverageSizeSelection = document.getElementById('beverage-size-selection');
    const ageVerification = document.getElementById('age-verification');
    const dispensing = document.getElementById('dispensing');
    const ready = document.getElementById('ready');
    
    // Elements - Age Verification
    const orderSummary = document.getElementById('order-summary').querySelector('span');
    const verifyAgeBtn = document.getElementById('verify-age-btn');
    const verificationForm = document.getElementById('verification-form');
    const verificationProcessing = document.getElementById('verification-processing');
    const verificationError = document.getElementById('verification-error');
    const verificationErrorMessage = document.getElementById('verification-error-message');
    
    // Elements - Dispensing
    const dispensingStepCup = document.getElementById('dispensing-step-cup');
    const dispensingStepPour = document.getElementById('dispensing-step-pour');
    const dispensingStepDeliver = document.getElementById('dispensing-step-deliver');
    const dispensingError = document.getElementById('dispensing-error');
    const dispensingErrorMessage = document.getElementById('dispensing-error-message');
    const liquid = document.getElementById('liquid');
    const foam = document.getElementById('foam');
    
    // Elements - Ready
    const readyBeverageType = document.getElementById('ready-beverage-type');
    const readyBeverageSize = document.getElementById('ready-beverage-size');
    const readyOrderId = document.getElementById('ready-order-id');
    const newOrderBtn = document.getElementById('new-order-btn');
    
    // Elements - Progress Steps
    const stepSelection = document.getElementById('step-selection');
    const stepVerification = document.getElementById('step-verification');
    const stepDispensing = document.getElementById('step-dispensing');
    const stepPickup = document.getElementById('step-pickup');
    
    // Beverage Type Selection
    beverageTypeOptions.forEach(option => {
        option.addEventListener('click', function() {
            beverageTypeOptions.forEach(opt => opt.classList.remove('selected'));
            this.classList.add('selected');
            selectedBeverageType = this.dataset.type;
            continueTypeBtn.disabled = false;
            
            // Update beverage type display
            const beverageName = this.querySelector('h3').textContent;
            beverageTypeDisplay.textContent = beverageName;
        });
    });
    
    // Beverage Size Selection
    beverageSizeOptions.forEach(option => {
        option.addEventListener('click', function() {
            beverageSizeOptions.forEach(opt => opt.classList.remove('selected'));
            this.classList.add('selected');
            selectedSize = this.dataset.size;
            continueSizeBtn.disabled = false;
        });
    });
    
    // Continue from Type Selection to Size Selection
    continueTypeBtn.addEventListener('click', function() {
        beverageTypeSelection.classList.add('d-none');
        beverageSizeSelection.classList.remove('d-none');
        progressContainer.classList.remove('d-none');
        
        // Update the liquid class based on beverage type
        liquid.className = 'liquid ' + selectedBeverageType;
    });
    
    // Back to Type Selection
    backToTypeBtn.addEventListener('click', function() {
        beverageSizeSelection.classList.add('d-none');
        beverageTypeSelection.classList.remove('d-none');
    });
    
    // Continue from Size Selection to Age Verification
    continueSizeBtn.addEventListener('click', function() {
        beverageSizeSelection.classList.add('d-none');
        ageVerification.classList.remove('d-none');
        stepSelection.classList.remove('active');
        stepSelection.classList.add('completed');
        stepVerification.classList.add('active');
        
        // Update order summary
        const beverageTypeName = beverageTypeDisplay.textContent;
        orderSummary.textContent = `${beverageTypeName} (${selectedSize}ml)`;
    });
    
    // Back to Size Selection
    backToSizeBtn.addEventListener('click', function() {
        ageVerification.classList.add('d-none');
        beverageSizeSelection.classList.remove('d-none');
        stepVerification.classList.remove('active');
        stepSelection.classList.remove('completed');
        stepSelection.classList.add('active');
    });
    
    // Verify Age and Start Order
    verifyAgeBtn.addEventListener('click', function(e) {
        e.preventDefault();
        
        // Simple form validation
        const idNumber = document.getElementById('id-number').value;
        const birthDate = document.getElementById('birth-date').value;
        const ageConfirmation = document.getElementById('age-confirmation').checked;
        
        if (!idNumber || !birthDate || !ageConfirmation) {
            verificationForm.classList.add('was-validated');
            return;
        }
        
        // Show processing state
        verificationForm.classList.add('d-none');
        verificationProcessing.classList.remove('d-none');
        verificationError.classList.add('d-none');
        
        // API call to verify age
        const verificationData = {
            id_number: idNumber,
            birth_date: birthDate,
            beverage_type: selectedBeverageType
        };
        
        fetch('/api/verify_age', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(verificationData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.verified) {
                // Age verified, start dispensing
                startDispensing();
            } else {
                // Age verification failed
                verificationErrorMessage.textContent = data.message || 'Age verification failed. You must be at least 18 years old.';
                verificationError.classList.remove('d-none');
                verificationForm.classList.remove('d-none');
                verificationProcessing.classList.add('d-none');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            verificationErrorMessage.textContent = 'An error occurred. Please try again.';
            verificationError.classList.remove('d-none');
            verificationForm.classList.remove('d-none');
            verificationProcessing.classList.add('d-none');
        });
    });
    
    // Start the dispensing process
    function startDispensing() {
        // Change to dispensing view
        ageVerification.classList.add('d-none');
        dispensing.classList.remove('d-none');
        stepVerification.classList.remove('active');
        stepVerification.classList.add('completed');
        stepDispensing.classList.add('active');
        
        // Reset dispensing animation
        liquid.style.height = '0%';
        foam.style.bottom = '100%';
        
        // Prepare order data
        const orderData = {
            beverage_type: selectedBeverageType,
            volume_ml: parseInt(selectedSize)
        };
        
        // Start the order
        orderInProgress = true;
        
        fetch('/api/dispense', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(orderData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Order started successfully
                monitorOrderProgress();
            } else {
                // Order failed to start
                dispensingErrorMessage.textContent = data.message || 'Failed to start the order. Please try again.';
                dispensingError.classList.remove('d-none');
                setTimeout(() => {
                    resetToSelection();
                }, 5000);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            dispensingErrorMessage.textContent = 'An error occurred. Please try again.';
            dispensingError.classList.remove('d-none');
            setTimeout(() => {
                resetToSelection();
            }, 5000);
        });
    }
    
    // Monitor the order progress
    function monitorOrderProgress() {
        const progressInterval = setInterval(() => {
            if (!orderInProgress) {
                clearInterval(progressInterval);
                return;
            }
            
            fetch('/api/state')
                .then(response => response.json())
                .then(data => {
                    updateDispensingAnimation(data.state);
                    
                    if (data.state === 'error') {
                        // Error occurred
                        orderInProgress = false;
                        dispensingErrorMessage.textContent = data.error_message || 'An error occurred during dispensing.';
                        dispensingError.classList.remove('d-none');
                        clearInterval(progressInterval);
                        setTimeout(() => {
                            resetToSelection();
                        }, 5000);
                    } else if (data.state === 'idle' && data.last_order_complete) {
                        // Order completed
                        orderInProgress = false;
                        clearInterval(progressInterval);
                        showOrderComplete(data.order_id);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }, 1000);
    }
    
    // Update the dispensing animation based on system state
    function updateDispensingAnimation(state) {
        // Update step indicators
        if (state === 'dispensing_cup') {
            dispensingStepCup.innerHTML = '<i class="fas fa-circle-notch fa-spin text-primary me-2"></i> Dispensing cup...';
            dispensingStepPour.innerHTML = '<i class="fas fa-circle text-muted me-2"></i> Pouring beverage...';
            dispensingStepDeliver.innerHTML = '<i class="fas fa-circle text-muted me-2"></i> Delivering to pickup station...';
        } else if (state === 'pouring_beer') {
            dispensingStepCup.innerHTML = '<i class="fas fa-check-circle text-success me-2"></i> Cup dispensed';
            dispensingStepPour.innerHTML = '<i class="fas fa-circle-notch fa-spin text-primary me-2"></i> Pouring beverage...';
            dispensingStepDeliver.innerHTML = '<i class="fas fa-circle text-muted me-2"></i> Delivering to pickup station...';
            
            // Animate the beer pouring
            liquid.style.height = '80%';
            foam.style.bottom = '80%';
        } else if (state === 'delivering_cup') {
            dispensingStepCup.innerHTML = '<i class="fas fa-check-circle text-success me-2"></i> Cup dispensed';
            dispensingStepPour.innerHTML = '<i class="fas fa-check-circle text-success me-2"></i> Beverage poured';
            dispensingStepDeliver.innerHTML = '<i class="fas fa-circle-notch fa-spin text-primary me-2"></i> Delivering to pickup station...';
        }
    }
    
    // Show the order complete screen
    function showOrderComplete(orderId) {
        // Update the ready screen
        readyBeverageType.textContent = beverageTypeDisplay.textContent;
        readyBeverageSize.textContent = selectedSize;
        readyOrderId.textContent = orderId || 'N/A';
        
        // Switch to ready screen
        dispensing.classList.add('d-none');
        ready.classList.remove('d-none');
        stepDispensing.classList.remove('active');
        stepDispensing.classList.add('completed');
        stepPickup.classList.add('active');
    }
    
    // Reset to selection screen
    function resetToSelection() {
        // Reset selection state
        selectedBeverageType = '';
        selectedSize = '';
        orderInProgress = false;
        
        // Reset form
        document.getElementById('id-number').value = '';
        document.getElementById('birth-date').value = '';
        document.getElementById('age-confirmation').checked = false;
        verificationForm.classList.remove('was-validated');
        verificationForm.classList.remove('d-none');
        verificationProcessing.classList.add('d-none');
        verificationError.classList.add('d-none');
        
        // Reset selection UI
        beverageTypeOptions.forEach(opt => opt.classList.remove('selected'));
        beverageSizeOptions.forEach(opt => opt.classList.remove('selected'));
        continueTypeBtn.disabled = true;
        continueSizeBtn.disabled = true;
        
        // Reset animation
        liquid.style.height = '0%';
        foam.style.bottom = '100%';
        
        // Show selection screen
        ready.classList.add('d-none');
        dispensing.classList.add('d-none');
        ageVerification.classList.add('d-none');
        beverageSizeSelection.classList.add('d-none');
        beverageTypeSelection.classList.remove('d-none');
        
        // Reset progress steps
        progressContainer.classList.add('d-none');
        stepSelection.classList.add('active');
        stepSelection.classList.remove('completed');
        stepVerification.classList.remove('active');
        stepVerification.classList.remove('completed');
        stepDispensing.classList.remove('active');
        stepDispensing.classList.remove('completed');
        stepPickup.classList.remove('active');
    }
    
    // Place another order
    newOrderBtn.addEventListener('click', function() {
        resetToSelection();
    });
});
</script>
{% endblock %}